names(tmp) <- c('ID3','subID','varbid3')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID3'))
grpdcsn <- grpdcsn[order(grpdcsn$subID, grpdcsn$trial), ]
# alignment of choice data across subjects according to the minimum target value
grpdcsn$V1scld <- grpdcsn$V1
grpdcsn$V2scld <- grpdcsn$V1
grpdcsn$V3scld <- grpdcsn$V1
grpdcsn$sdbid1scld <- grpdcsn$V1
grpdcsn$sdbid2scld <- grpdcsn$V1
grpdcsn$sdbid3scld <- grpdcsn$V1
grpdcsn$varbid1scld <- grpdcsn$V1
grpdcsn$varbid2scld <- grpdcsn$V1
grpdcsn$varbid3scld <- grpdcsn$V1
grpdcsn$sdbidlabel <- grpdcsn$Vagueness
subjlist <- unique(grpdcsn$subID)
minvals_new <- c()
for (s in subjlist)
{
mask <- grpdcsn$subID == s
minval <- min(c(grpdcsn$V1[mask], grpdcsn$V2[mask]))
grpdcsn$V1scld[mask] <- grpdcsn$V1[mask]/minval
grpdcsn$V2scld[mask] <- grpdcsn$V2[mask]/minval
grpdcsn$V3scld[mask] <- grpdcsn$V3[mask]/minval
grpdcsn$sdbid1scld[mask] <- grpdcsn$sdbid1[mask]/minval
grpdcsn$sdbid2scld[mask] <- grpdcsn$sdbid2[mask]/minval
grpdcsn$sdbid3scld[mask] <- grpdcsn$sdbid3[mask]/minval
grpdcsn$varbid1scld[mask] <- grpdcsn$varbid1[mask]/minval^2
grpdcsn$varbid2scld[mask] <- grpdcsn$varbid2[mask]/minval^2
grpdcsn$varbid3scld[mask] <- grpdcsn$varbid3[mask]/minval^2
}
grpdcsn$sdbidlabel[grpdcsn$sdbid3 > median(grpdcsn$sdbid3)] <- "Vague"
grpdcsn$sdbidlabel[grpdcsn$sdbid3 <= median(grpdcsn$sdbid3)] <- "Precise"
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # difference between two targets, in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
grpdcsn$VDscld <- grpdcsn$V2scld - grpdcsn$V1scld
# discard the trials where choice is not made
grpdcsn <- grpdcsn[!is.na(grpdcsn$choice),]
# discard the trials where V1 == V2
grpdcsn <- grpdcsn[grpdcsn$V1 != grpdcsn$V2,]
str(grpdcsn)
redtrnsp <- rgb(255,0,0,50, maxColorValue = 255)
bluetrnsp <- rgb(0,0,255,50, maxColorValue = 255)
# group overlay
for (s in 1:length(subjlist))
{
indvdat <- mrgdat[mrgdat$subID == subjlist[s],]
patchdat <- indvdat[indvdat$touched == 1,]
if (s == 1){plot(patchdat$meanbid, patchdat$sdbid, pch = 20, col = bluetrnsp, xlab = ' ', ylab = ' ', xlim = c(0,90), ylim = c(0,sqrt(500)), frame.plot = TRUE, axes = FALSE,  xaxt = "n", yaxt = "n")}else{points(patchdat$meanbid,patchdat$sdbid, pch = 20, col = bluetrnsp)}
abline(lm(sdbid ~ meanbid, data = patchdat), col = bluetrnsp)
}
patchdat <- mrgdat[mrgdat$touched == 1,]
abline(lm(sdbid ~ meanbid, data = patchdat), col = 'blue', lwd = 3)
axis(1, at = c(seq(0,90,20)),  tck = -0.02, padj = -1, cex.axis = 1)
axis(2, tck = -0.02, at = c(seq(0,22,10)), padj = 1, cex.axis = 1)
title(ylab = 'Standard deviation of bid', mgp = c(1.5,0,0), font.lab = 1, cex.lab = 1)
title(xlab = "Bid mean ($)", mgp = c(1.5,0,0), font.lab = 1, cex.lab = 1)
dev.copy(pdf,file.path(out_dir,sprintf("Paper_BidSd_A.pdf")),height=3.9, width=3.5)
dev.off()
for (s in 1:length(subjlist))
{
indvdat <- mrgdat[mrgdat$subID == subjlist[s],]
patchdat <- indvdat[indvdat$touched == 0,]
points(patchdat$meanbid, patchdat$sdbid, pch = 20, col = redtrnsp)
abline(lm(sdbid ~ meanbid, data = patchdat), col = redtrnsp)
}
patchdat <- mrgdat[mrgdat$touched == 0,]
abline(lm(sdbid ~ meanbid, data = patchdat), col = 'red', lwd = 3)
legend('topright',c('Amgiguous','Definitive'), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red','blue'))
LowestV3 <- 0.2
HighestV3 <- .8
## Method 1: test based on the experimental conditions
# mixed model lacks power to reach significance
summary(test <- glmer(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= HighestV3,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0.2 & grpdcsn$V3scld <= HighestV3,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
# VaguenessVague         -0.26039    0.14118  -1.844   0.0651 .
# TimePressureLow         0.02188    0.14060   0.156   0.8764
# V3scld                 -0.26119    0.24418  -1.070   0.2848
# VaguenessVague:V3scld   0.59162    0.28320   2.089   0.0367 *
# TimePressureLow:V3scld  0.27890    0.28229   0.988   0.3232
# post-hoc to see the linear trend of each condition
summary(test <- glm(choice ~ Vagueness + TimePressure + V3scld:Vagueness:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= HighestV3,]))
# VaguenessVague         -0.26039    0.14118  -1.844   0.0651 .
# TimePressureLow         0.02188    0.14060   0.156   0.8764
# V3scld                 -0.26119    0.24418  -1.070   0.2848
# VaguenessVague:V3scld   0.59162    0.28320   2.089   0.0367 *
# TimePressureLow:V3scld  0.27890    0.28229   0.988   0.3232
# post-hoc to see the linear trend of each condition
summary(test <- glm(choice ~ Vagueness + TimePressure + V3scld:Vagueness:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
## Method 2: test based on the item-wise variance from bidding
summary(test <- glmer(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
## Method 2: test based on the item-wise variance from bidding
summary(test <- glmer(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0.2 & grpdcsn$V3scld <= .8,]))
## Method 2: test based on the item-wise variance from bidding
summary(test <- glmer(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
# TimePressureLow         0.20427    0.05066   4.032 5.53e-05 ***
# V3scld                  0.03276    0.09842   0.333    0.739
# sdbid3scld              0.24759    0.25297   0.979    0.328
# V3scld:sdbid3scld      -0.13082    0.31544  -0.415    0.678
# TimePressureLow:V3scld -0.04708    0.11447  -0.411    0.681
summary(test <- glm(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
# TimePressureLow         0.20427    0.05066   4.032 5.53e-05 ***
# V3scld                  0.03276    0.09842   0.333    0.739
# sdbid3scld              0.24759    0.25297   0.979    0.328
# V3scld:sdbid3scld      -0.13082    0.31544  -0.415    0.678
# TimePressureLow:V3scld -0.04708    0.11447  -0.411    0.681
summary(test <- glm(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
# TimePressure1        -0.07921    0.02557  -3.098  0.00195 **
# V3scld               -0.18097    0.08827  -2.050  0.04034 *
# sdbid3scld           -1.92262    0.30524  -6.299 3.00e-10 ***
# V3scld:sdbid3scld     3.48975    0.57413   6.078 1.21e-09 ***
# TimePressure1:V3scld -0.02768    0.07192  -0.385  0.70038
summary(test <- glm(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0.2 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
# old version
# TimePressureLow        -0.03776    0.14166  -0.267   0.7898
# V3scld                 -0.60671    0.24860  -2.441   0.0147 *
# sdbid3scld             -2.00266    0.44915  -4.459 8.24e-06 ***
# V3scld:sdbid3scld       3.59112    0.81662   4.398 1.09e-05 ***
# TimePressureLow:V3scld  0.40779    0.28448   1.433   0.1517
summary(test <- glm(choice ~ TimePressure + V3scld + sdbidlabel + V3scld:sdbidlabel + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
# TimePressureLow         0.20427    0.05066   4.032 5.53e-05 ***
# V3scld                  0.03276    0.09842   0.333    0.739
# sdbid3scld              0.24759    0.25297   0.979    0.328
# V3scld:sdbid3scld      -0.13082    0.31544  -0.415    0.678
# TimePressureLow:V3scld -0.04708    0.11447  -0.411    0.681
summary(test <- glm(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure + sdbid3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .9,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= 1,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
hist(grpdcsn$sdbid3scld)
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= 1 & grpdcsn$sdbid3scld <= 1,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= 1 & grpdcsn$sdbid3scld <= 2,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
levels(grpdcsn$TimePressure)
levels(grpdcsn$TimePressure) <- c('Low','High')
levels(grpdcsn$TimePressure)
levels(grpdcsn$Vagueness)
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
# old version
# TimePressureLow        -0.03776    0.14166  -0.267   0.7898
# V3scld                 -0.60671    0.24860  -2.441   0.0147 *
# sdbid3scld             -2.00266    0.44915  -4.459 8.24e-06 ***
# V3scld:sdbid3scld       3.59112    0.81662   4.398 1.09e-05 ***
# TimePressureLow:V3scld  0.40779    0.28448   1.433   0.1517
summary(test <- glm(choice ~ TimePressure + V3scld + sdbidlabel + V3scld:sdbidlabel + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
levels(grpdcsn$TimePressure) <- c('High','Low')
LowestV3 <- 0.2
HighestV3 <- .8
contrasts(grpdcsn$TimePressure) <- contr.treatment(levels(grpdcsn$TimePressure))
contrasts(grpdcsn$TimePressure)
contrasts(grpdcsn$Vagueness) <- contr.treatment(levels(grpdcsn$Vagueness))
contrasts(grpdcsn$Vagueness)
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ V3scld*Vagueness*TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= HighestV3,]))
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
# define variable types in bid data
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# define varibale types in choice data
grpdcsn$Group <- as.factor(grpdcsn$Group)
grpdcsn$subID <- as.factor(grpdcsn$subID)
grpdcsn$Vagueness <- as.factor(grpdcsn$Vagueness)
grpdcsn$TimePressure <- as.factor(grpdcsn$TimePressure)
blacklist <- c('22102405', '22102705', '22071913', '22102708', '22110306') # screening 5 out of 60
# from the above screening, 22102405 and 22102705 bid all targets as zero.
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpbid)
str(grpdcsn)
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
# Calculate the variability of participants' rating, as a function of the bid mean value
meanbid <- aggregate(bid ~ item +  subID, FUN = mean, data = grpbid)
meanbid$bid <- round(meanbid$bid, 2)
sdbid <- aggregate(bid ~ item + subID, FUN = sd, data = grpbid)
sdbid$bid <- round(sdbid$bid, 1)
varbid <- aggregate(bid ~ item + subID, FUN = var, data = grpbid)
# grpdcsn <- grpdcsn[,!names(grpdcsn) %in% c('V1', 'V2', 'V3')]
# tmp <- meanbid
# names(tmp) <- c('ID1','subID','V1')
# grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID1'))
# names(tmp) <- c('ID2','subID','V2')
# grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID2'))
# names(tmp) <- c('ID3','subID','V3')
# grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID3'))
# combine the bidding variance into choice data
tmp <- sdbid
names(tmp) <- c('ID1','subID','sdbid1')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID1'))
tmp <- sdbid
names(tmp) <- c('ID2','subID','sdbid2')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID2'))
tmp <- sdbid
names(tmp) <- c('ID3','subID','sdbid3')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID3'))
tmp <- varbid
names(tmp) <- c('ID1','subID','varbid1')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID1'))
tmp <- varbid
names(tmp) <- c('ID2','subID','varbid2')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID2'))
tmp <- varbid
names(tmp) <- c('ID3','subID','varbid3')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID3'))
grpdcsn <- grpdcsn[order(grpdcsn$subID, grpdcsn$trial), ]
# alignment of choice data across subjects according to the minimum target value
grpdcsn$V1scld <- grpdcsn$V1
grpdcsn$V2scld <- grpdcsn$V1
grpdcsn$V3scld <- grpdcsn$V1
grpdcsn$sdbid1scld <- grpdcsn$V1
grpdcsn$sdbid2scld <- grpdcsn$V1
grpdcsn$sdbid3scld <- grpdcsn$V1
grpdcsn$varbid1scld <- grpdcsn$V1
grpdcsn$varbid2scld <- grpdcsn$V1
grpdcsn$varbid3scld <- grpdcsn$V1
grpdcsn$sdbidlabel <- grpdcsn$Vagueness
subjlist <- unique(grpdcsn$subID)
minvals_new <- c()
for (s in subjlist)
{
mask <- grpdcsn$subID == s
minval <- min(c(grpdcsn$V1[mask], grpdcsn$V2[mask]))
grpdcsn$V1scld[mask] <- grpdcsn$V1[mask]/minval
grpdcsn$V2scld[mask] <- grpdcsn$V2[mask]/minval
grpdcsn$V3scld[mask] <- grpdcsn$V3[mask]/minval
grpdcsn$sdbid1scld[mask] <- grpdcsn$sdbid1[mask]/minval
grpdcsn$sdbid2scld[mask] <- grpdcsn$sdbid2[mask]/minval
grpdcsn$sdbid3scld[mask] <- grpdcsn$sdbid3[mask]/minval
grpdcsn$varbid1scld[mask] <- grpdcsn$varbid1[mask]/minval^2
grpdcsn$varbid2scld[mask] <- grpdcsn$varbid2[mask]/minval^2
grpdcsn$varbid3scld[mask] <- grpdcsn$varbid3[mask]/minval^2
}
grpdcsn$sdbidlabel[grpdcsn$sdbid3 > median(grpdcsn$sdbid3)] <- "Vague"
grpdcsn$sdbidlabel[grpdcsn$sdbid3 <= median(grpdcsn$sdbid3)] <- "Precise"
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # difference between two targets, in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
grpdcsn$VDscld <- grpdcsn$V2scld - grpdcsn$V1scld
# discard the trials where choice is not made
grpdcsn <- grpdcsn[!is.na(grpdcsn$choice),]
# discard the trials where V1 == V2
grpdcsn <- grpdcsn[grpdcsn$V1 != grpdcsn$V2,]
str(grpdcsn)
LowestV3 <- 0.2
HighestV3 <- .8
## Method 1: test based on the experimental conditions
# mixed model lacks power to reach significance
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3:Vagueness:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ V3scld*Vagueness*TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= HighestV3,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
## Method 1: test based on the experimental conditions
# mixed model lacks power to reach significance
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3:Vagueness:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ V3scld*Vagueness*TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= .2 & grpdcsn$V3scld <= HighestV3,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
# VaguenessVague         -0.26039    0.14118  -1.844   0.0651 .
# TimePressureLow         0.02188    0.14060   0.156   0.8764
# V3scld                 -0.26119    0.24418  -1.070   0.2848
# VaguenessVague:V3scld   0.59162    0.28320   2.089   0.0367 *
# TimePressureLow:V3scld  0.27890    0.28229   0.988   0.3232
# post-hoc to see the linear trend of each condition
summary(test <- glm(choice ~ Vagueness + TimePressure + V3scld:Vagueness:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
## Method 1: test based on the experimental conditions
# mixed model lacks power to reach significance
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3:Vagueness:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ V3scld*Vagueness*TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= .2 & grpdcsn$V3scld <= HighestV3,]))
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
# define variable types in bid data
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# define varibale types in choice data
grpdcsn$Group <- as.factor(grpdcsn$Group)
grpdcsn$subID <- as.factor(grpdcsn$subID)
grpdcsn$Vagueness <- as.factor(grpdcsn$Vagueness)
grpdcsn$TimePressure <- as.factor(grpdcsn$TimePressure)
blacklist <- c('22102405', '22102705', '22071913', '22102708', '22110306') # screening 5 out of 60
# from the above screening, 22102405 and 22102705 bid all targets as zero.
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpbid)
str(grpdcsn)
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
# Calculate the variability of participants' rating, as a function of the bid mean value
meanbid <- aggregate(bid ~ item +  subID, FUN = mean, data = grpbid)
meanbid$bid <- round(meanbid$bid, 2)
sdbid <- aggregate(bid ~ item + subID, FUN = sd, data = grpbid)
# sdbid$bid <- round(sdbid$bid, 1)
varbid <- aggregate(bid ~ item + subID, FUN = var, data = grpbid)
# grpdcsn <- grpdcsn[,!names(grpdcsn) %in% c('V1', 'V2', 'V3')]
# tmp <- meanbid
# names(tmp) <- c('ID1','subID','V1')
# grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID1'))
# names(tmp) <- c('ID2','subID','V2')
# grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID2'))
# names(tmp) <- c('ID3','subID','V3')
# grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID3'))
# combine the bidding variance into choice data
tmp <- sdbid
names(tmp) <- c('ID1','subID','sdbid1')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID1'))
tmp <- sdbid
names(tmp) <- c('ID2','subID','sdbid2')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID2'))
tmp <- sdbid
names(tmp) <- c('ID3','subID','sdbid3')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID3'))
tmp <- varbid
names(tmp) <- c('ID1','subID','varbid1')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID1'))
tmp <- varbid
names(tmp) <- c('ID2','subID','varbid2')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID2'))
tmp <- varbid
names(tmp) <- c('ID3','subID','varbid3')
grpdcsn <- merge(grpdcsn, tmp, by = c('subID','ID3'))
grpdcsn <- grpdcsn[order(grpdcsn$subID, grpdcsn$trial), ]
# alignment of choice data across subjects according to the minimum target value
grpdcsn$V1scld <- grpdcsn$V1
grpdcsn$V2scld <- grpdcsn$V1
grpdcsn$V3scld <- grpdcsn$V1
grpdcsn$sdbid1scld <- grpdcsn$V1
grpdcsn$sdbid2scld <- grpdcsn$V1
grpdcsn$sdbid3scld <- grpdcsn$V1
grpdcsn$varbid1scld <- grpdcsn$V1
grpdcsn$varbid2scld <- grpdcsn$V1
grpdcsn$varbid3scld <- grpdcsn$V1
grpdcsn$sdbidlabel <- grpdcsn$Vagueness
subjlist <- unique(grpdcsn$subID)
minvals_new <- c()
for (s in subjlist)
{
mask <- grpdcsn$subID == s
minval <- min(c(grpdcsn$V1[mask], grpdcsn$V2[mask]))
grpdcsn$V1scld[mask] <- grpdcsn$V1[mask]/minval
grpdcsn$V2scld[mask] <- grpdcsn$V2[mask]/minval
grpdcsn$V3scld[mask] <- grpdcsn$V3[mask]/minval
grpdcsn$sdbid1scld[mask] <- grpdcsn$sdbid1[mask]/minval
grpdcsn$sdbid2scld[mask] <- grpdcsn$sdbid2[mask]/minval
grpdcsn$sdbid3scld[mask] <- grpdcsn$sdbid3[mask]/minval
grpdcsn$varbid1scld[mask] <- grpdcsn$varbid1[mask]/minval^2
grpdcsn$varbid2scld[mask] <- grpdcsn$varbid2[mask]/minval^2
grpdcsn$varbid3scld[mask] <- grpdcsn$varbid3[mask]/minval^2
}
grpdcsn$sdbidlabel[grpdcsn$sdbid3 > median(grpdcsn$sdbid3)] <- "Vague"
grpdcsn$sdbidlabel[grpdcsn$sdbid3 <= median(grpdcsn$sdbid3)] <- "Precise"
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # difference between two targets, in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
grpdcsn$VDscld <- grpdcsn$V2scld - grpdcsn$V1scld
# discard the trials where choice is not made
grpdcsn <- grpdcsn[!is.na(grpdcsn$choice),]
# discard the trials where V1 == V2
grpdcsn <- grpdcsn[grpdcsn$V1 != grpdcsn$V2,]
str(grpdcsn)
LowestV3 <- 0.2
HighestV3 <- .8
## Method 1: test based on the experimental conditions
# mixed model lacks power to reach significance
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3:Vagueness:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ V3scld*Vagueness*TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= .2 & grpdcsn$V3scld <= HighestV3,]))
## Method 1: test based on the experimental conditions
# mixed model lacks power to reach significance
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3:Vagueness:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ V3scld*Vagueness*TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
grpdcsn$V1scld
grpdcsn$V1
## Method 1: test based on the experimental conditions
# mixed model lacks power to reach significance
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3scld + V3scld:Vagueness + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# summary(test <- glmer(choice ~ Vagueness + TimePressure + V3:Vagueness:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
# test on pooled data reveal significant impacts of vagueness on overall accuracy as well as contextual slope
summary(test <- glm(choice ~ V3scld + Vagueness + TimePressure + V3scld:Vagueness + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
summary(test <- glm(choice ~ V3scld + Vagueness + TimePressure + V3scld:Vagueness + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= HighestV3,]))
# z test of coefficients:
#
#                         Estimate Std. Error z value  Pr(>|z|)
# (Intercept)             0.770980   0.212858  3.6220 0.0002923 ***
# V3scld                 -0.261194   0.352371 -0.7412 0.4585433
# VaguenessVague         -0.260394   0.147117 -1.7700 0.0767305 .
# TimePressureLow         0.021875   0.099660  0.2195 0.8262604
# V3scld:VaguenessVague   0.591621   0.307297  1.9252 0.0541996 .
# V3scld:TimePressureLow  0.278897   0.210924  1.3223 0.1860800
# post-hoc to see the linear trend of each condition
summary(test <- glm(choice ~ Vagueness + TimePressure + V3scld:Vagueness:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= LowestV3 & grpdcsn$V3scld <= HighestV3,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
## Method 2: test based on the item-wise variance from bidding
# summary(test <- glmer(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
summary(test <- glm(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure + sdbid3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
summary(test <- glm(choice ~ V3scld*TimePressure*sdbid3scld, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
## Method 2: test based on the item-wise variance from bidding
# summary(test <- glmer(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure + (1|subID), family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
summary(test <- glm(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure + sdbid3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0 & grpdcsn$V3scld <= .8,]))
coeftest(test, vcov = vcovCL(test, cluster = ~subID))
# TimePressure1        -0.07921    0.02557  -3.098  0.00195 **
# V3scld               -0.18097    0.08827  -2.050  0.04034 *
# sdbid3scld           -1.92262    0.30524  -6.299 3.00e-10 ***
# V3scld:sdbid3scld     3.48975    0.57413   6.078 1.21e-09 ***
# TimePressure1:V3scld -0.02768    0.07192  -0.385  0.70038
summary(test <- glm(choice ~ TimePressure + V3scld + sdbid3scld + V3scld:sdbid3scld + V3scld:TimePressure, family = "binomial", data = grpdcsn[grpdcsn$choice != 2 & grpdcsn$V3scld >= 0.2 & grpdcsn$V3scld <= .8,]))
levels(grpdcsn$TimePressure)
levels(grpdcsn$Vagueness)
contrast_matrix <- cbind(
c(1, 0, 0, -1),  # Contrast for High-Precise vs Low-Vague
c(0, 1, -1, 0)   # Additional orthogonal contrast (if needed)
)
# Assign this contrast matrix to the interaction term
contrasts(grpdcsn$TimePressure:Vagueness) <- contrast_matrix
# Assign this contrast matrix to the interaction term
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness) <- contrast_matrix
contrasts(grpdcsn$TimePressure:Vagueness)
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness)
contrast_matrix <- cbind(
c(1, 0, 0, -1),  # Contrast for High-Precise vs Low-Vague
c(0, 1, -1, 0)   # Additional orthogonal contrast (if needed)
)
# Assign this contrast matrix to the interaction term
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness) <- contrast_matrix
contrast_matrix
contrast_matrix <- rbind(
c(1, 0, 0, -1),  # Contrast for High-Precise vs Low-Vague
c(0, 1, -1, 0)   # Additional orthogonal contrast (if needed)
)
contrast_matrix
# Assign this contrast matrix to the interaction term
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness) <- contrast_matrix
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness)
#
#                                            Estimate Std. Error z value  Pr(>|z|)
# (Intercept)                               0.7721902  0.2132208  3.6216 0.0002928 ***
# VaguenessVague                           -0.2606695  0.1470312 -1.7729 0.0762476 .
# TimePressureLow                           0.0205426  0.0987919  0.2079 0.8352773
# VaguenessPrecise:TimePressureHigh:V3scld -0.2551843  0.3514218 -0.7261 0.4677480
# VaguenessVague:TimePressureHigh:V3scld    0.3192743  0.2887666  1.1056 0.2688788
# VaguenessPrecise:TimePressureLow:V3scld   0.0091496  0.3617494  0.0253 0.9798216
# VaguenessVague:TimePressureLow:V3scld     0.6191957  0.3582358  1.7285 0.0839060 .
# Define the custom contrast matrix
contrasts(grpdcsn$TimePressure) <- contr.sum(levels(grpdcsn$TimePressure))
contrasts(grpdcsn$Vagueness) <- contr.sum(levels(grpdcsn$Vagueness))
contrasts(grpdcsn$Vagueness)
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness)
contrast_matrix <- rbind(
c(1, 0, 0, -1),  # Contrast for High-Precise vs Low-Vague
c(0, 1, -1, 0)   # Additional orthogonal contrast (if needed)
)
# Assign this contrast matrix to the interaction term
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness) <- contrast_matrix
# Assign this contrast matrix to the interaction term
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness) <- contr.sum
# Assign this contrast matrix to the interaction term
contrasts(grpdcsn$TimePressure:grpdcsn$Vagueness) <- contr.sum(grpdcsn$TimePressure:grpdcsn$Vagueness)
