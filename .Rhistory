knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII')
data_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/TaskProgram/log/txtDat'
out_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII'
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
# normalize within subjects
bidmax <- aggregate(bid ~ subID, data = grpbid, FUN = max)
grpbid$normbid <- 0
for (subi in 1:Nsubj)
{
indvmask <- grpbid$subID == subjlist[subi]
grpbid$normbid[indvmask] <- grpbid$bid[indvmask]/bidmax$bid[bidmax$subID == subjlist[subi]] # scale down the bid value to the maximum bid of each individual
}
par(mfrow = c(2,1))
barx <- boxplot(normbid ~ subID, data = grpbid, las = 2)
normbidvar <- aggregate(normbid ~ subID, data = grpbid, FUN = sd)
barplot(normbid ~ subID, las = 2, data = normbidvar, col = 8)
dev.copy(pdf,file.path(out_dir,sprintf("BidQuality.pdf")), height=8, width=12)
dev.off()
blacklist <- c() # pick out the subjects whose bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
# from the above screening, 22102405 and 22102705 bid all targets as zero.
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
str(grpbid)
Ngroup <- aggregate(Group ~ subID, data = grpbid, FUN = unique)
subID <- unique(grpbid$subID)
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpdcsn)
grpdcsn <- grpdcsn[!is.na(grpdcsn$choice),]
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
grpdcsn$Group <- as.factor(grpdcsn$Group)
grpdcsn$subID <- as.factor(grpdcsn$subID)
grpdcsn$Vagueness <- as.factor(grpdcsn$Vagueness)
grpdcsn$TimePressure <- as.factor(grpdcsn$TimePressure)
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # difference between two targets, in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
# combine the variance of items into it
tmp <- varbid
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
varbid
sdbid
require(lmerTest)
bidmax <- aggregate(bid ~ subID, data = grpbid, FUN = max)
grpbid$normbid <- 0
for (subi in 1:Nsubj)
{
indvmask <- grpbid$subID == subjlist[subi]
grpbid$normbid[indvmask] <- grpbid$bid[indvmask]/bidmax$bid[bidmax$subID == subjlist[subi]] # scale down the bid value to the maximum bid of each individual
}
par(mfrow = c(2,1))
barx <- boxplot(normbid ~ subID, data = grpbid, las = 2)
normbidvar <- aggregate(normbid ~ subID, data = grpbid, FUN = sd)
barplot(normbid ~ subID, las = 2, data = normbidvar, col = 8)
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
blacklist <- c() # pick out the subjects whose bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
# from the above screening, 22102405 and 22102705 bid all targets as zero.
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
str(grpbid)
Ngroup <- aggregate(Group ~ subID, data = grpbid, FUN = unique)
subID <- unique(grpbid$subID)
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpdcsn)
grpdcsn <- grpdcsn[!is.na(grpdcsn$choice),]
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
blacklist <- c() # pick out the subjects whose bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
# from the above screening, 22102405 and 22102705 bid all targets as zero.
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpbid)
# discard the trials where choice is not made
grpdcsn <- grpdcsn[!is.na(grpdcsn$choice),]
# discard the trials where V1 == V2
grpdcsn <- grpdcsn[grpdcsn$V1 != grpdcsn$V2,]
str(grpdcsn)
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# Calculate the variability of participants' rating, as a function of the bid mean value
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
grpdcsn$Group <- as.factor(grpdcsn$Group)
grpdcsn$subID <- as.factor(grpdcsn$subID)
grpdcsn$Vagueness <- as.factor(grpdcsn$Vagueness)
grpdcsn$TimePressure <- as.factor(grpdcsn$TimePressure)
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # difference between two targets, in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
# combine the variance of items into it
tmp <- sdbid
names(tmp) <- c('ID1','touched','subID','sdbid1')
tmp <- sdbid
names(tmp) <- c('ID2','touched','subID','sdbid2')
tmp <- sdbid
names(tmp) <- c('ID3','touched','subID','sdbid3')
grpdcsn
str(grpdcsn)
# combine the variance of items into it
tmp <- sdbid
names(tmp) <- c('ID1','touched','subID','sdbid1')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID1'))
tmp <- sdbid
names(tmp) <- c('ID2','touched','subID','sdbid2')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID2'))
tmp <- sdbid
names(tmp) <- c('ID3','touched','subID','sdbid3')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID3'))
str(grpdcsn)
NaN(grpdcsn$V1)
NaN(9)
nan(9)
data_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/TaskProgram/log/txtDat'
out_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII'
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
blacklist <- c() # pick out the subjects whose bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
# from the above screening, 22102405 and 22102705 bid all targets as zero.
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpbid)
str(grpdcsn)
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# Calculate the variability of participants' rating, as a function of the bid mean value
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
grpdcsn$Group <- as.factor(grpdcsn$Group)
grpdcsn$subID <- as.factor(grpdcsn$subID)
grpdcsn$Vagueness <- as.factor(grpdcsn$Vagueness)
grpdcsn$TimePressure <- as.factor(grpdcsn$TimePressure)
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # difference between two targets, in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
# combine the bidding variance into choice data
tmp <- sdbid
names(tmp) <- c('ID1','touched','subID','sdbid1')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID1'))
tmp <- sdbid
names(tmp) <- c('ID2','touched','subID','sdbid2')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID2'))
tmp <- sdbid
names(tmp) <- c('ID3','touched','subID','sdbid3')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID3'))
# alignment of choice data across subjects according to the minimum target value
grpdcsn$V1scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$V1scld
plot(V1 ~ V2, data = grpdcsn)
grpdcsn$V1scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$V2scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$V3scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$sdbid1scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$sdbid2scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$sdbid3scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
subjlist <- unique(grpdcsn$subID)
for (s in subjlist)
{
mask <- grpdcsn$subID == s
minval <- min(c(grpdcsn$V1[mask], grpdcsn$V2[mask]))
grpdcsn$V1scld[mask] <- grpdcsn$V1[mask]/minval
grpdcsn$V2scld[mask] <- grpdcsn$V2[mask]/minval
grpdcsn$V3scld[mask] <- grpdcsn$V3[mask]/minval
grpdcsn$sdbid1scld[mask] <- grpdcsn$sdbid1[mask]/minval
grpdcsn$sdbid2scld[mask] <- grpdcsn$sdbid2[mask]/minval
grpdcsn$sdbid3scld[mask] <- grpdcsn$sdbid3[mask]/minval
}
grpdcsn$VDscld <- grpdcsn$V2scld - grpdcsn$V1scld
# discard the trials where choice is not made
grpdcsn <- grpdcsn[!is.na(grpdcsn$choice),]
# discard the trials where V1 == V2
grpdcsn <- grpdcsn[grpdcsn$V1 != grpdcsn$V2,]
str(grpdcsn)
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
blacklist <- c() # pick out the subjects whose bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
# from the above screening, 22102405 and 22102705 bid all targets as zero.
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpbid)
str(grpdcsn)
# define variable types in bid data
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# Calculate the variability of participants' rating, as a function of the bid mean value
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
# define varibale types in choice data
grpdcsn$Group <- as.factor(grpdcsn$Group)
grpdcsn$subID <- as.factor(grpdcsn$subID)
grpdcsn$Vagueness <- as.factor(grpdcsn$Vagueness)
grpdcsn$TimePressure <- as.factor(grpdcsn$TimePressure)
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # difference between two targets, in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
# combine the bidding variance into choice data
tmp <- sdbid
names(tmp) <- c('ID1','touched','subID','sdbid1')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID1'))
tmp <- sdbid
names(tmp) <- c('ID2','touched','subID','sdbid2')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID2'))
tmp <- sdbid
names(tmp) <- c('ID3','touched','subID','sdbid3')
grpdcsn <- merge(grpdcsn, tmp[,-2], by = c('subID','ID3'))
# alignment of choice data across subjects according to the minimum target value
grpdcsn$V1scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$V2scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$V3scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$sdbid1scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$sdbid2scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
grpdcsn$sdbid3scld <- array(NaN, dim = c(length(grpdcsn$trial), 1))
subjlist <- unique(grpdcsn$subID)
for (s in subjlist)
{
mask <- grpdcsn$subID == s
minval <- min(c(grpdcsn$V1[mask], grpdcsn$V2[mask]))
grpdcsn$V1scld[mask] <- grpdcsn$V1[mask]/minval
grpdcsn$V2scld[mask] <- grpdcsn$V2[mask]/minval
grpdcsn$V3scld[mask] <- grpdcsn$V3[mask]/minval
grpdcsn$sdbid1scld[mask] <- grpdcsn$sdbid1[mask]/minval
grpdcsn$sdbid2scld[mask] <- grpdcsn$sdbid2[mask]/minval
grpdcsn$sdbid3scld[mask] <- grpdcsn$sdbid3[mask]/minval
}
grpdcsn$VDscld <- grpdcsn$V2scld - grpdcsn$V1scld
# discard the trials where choice is not made
grpdcsn <- grpdcsn[!is.na(grpdcsn$choice),]
# discard the trials where V1 == V2
grpdcsn <- grpdcsn[grpdcsn$V1 != grpdcsn$V2,]
str(grpdcsn)
require(lmerTest)
mrgdat <- merge(meanbid,varbid, by = c('subID','item','touched'))
mrgdat$bidmean <- mrgdat$bid.x
mrgdat$bidvar <- mrgdat$bid.y
Rgtest <- lmer(bidvar ~ bidmean * touched + (1|subID), data = mrgdat)
summary(Rgtest)
summary(Rgtest <- lmer(bidvar ~ bidmean * touched + (1|subID), data = mrgdat))
# test on the mean bidding values between precise and vague items
summary(test <- aov(bidmean ~ touched + Error(subID), data = mrgdat))
# test on the mean bidding values between precise and vague items
summary(test <- aov(bidmean ~ touched + Error(subID), data = mrgdat))
# mean-scailed effect
summary(Rgtest <- lmer(bidvar ~ bidmean * touched + (1|subID), data = mrgdat))
# test only on V3
V3vars <- aggregate(varbid3 ~ V3 + ID3 + subID + Vagueness, data = grpdcsn, FUN = mean)
mrgdat <- merge(meanbid,sdbid, by = c('subID','item','touched'))
mrgdat$bidmean <- mrgdat$bid.x
mrgdat$bidsd <- mrgdat$bid.y
# test on the mean bidding values between precise and vague items
summary(Rgtest <- lmer(bidsd ~ bidmean * touched + (1|subID), data = mrgdat))
mrgdat <- merge(meanbid,varbid, by = c('subID','item','touched'))
mrgdat$bidmean <- mrgdat$bid.x
mrgdat$bidvar <- mrgdat$bid.y
# test on the mean bidding values between precise and vague items
summary(Rgtest <- lmer(bidvar ~ bidmean * touched + (1|subID), data = mrgdat))
sdbid <- aggregate(sdbid3scld ~ ID3, data = sectdat, FUN = mean)
sectdat <- indvdat[indvdat$TimePressure == tp & indvdat$Vagueness == v & indvdat$chosenItem != 3 & !is.na(indvdat$chosenItem),]
Indvdir <- file.path(out_dir, 'IndvChoice')
if (!file.exists(Indvdir))
{dir.create(Indvdir)}
subID <- unique(grpdcsn$subID)
Vagueness <- unique(grpdcsn$Vagueness)
TimePressure <- unique(grpdcsn$TimePressure)
AccID3 <- c()
Rgress <- c()
for (s in 1:length(subID))
{
par(mfrow = c(2,2))
indvdat <- grpdcsn[grpdcsn$subID == subID[s],]
vi <- 0
for (v in Vagueness) # decision noise
{
vi <- vi + 1
tpi <- 0
for (tp in TimePressure) # representation noise
{
tpi <- tpi + 1
sectdat <- indvdat[indvdat$TimePressure == tp & indvdat$Vagueness == v & indvdat$chosenItem != 3 & !is.na(indvdat$chosenItem),]
v3ID <- unique(sectdat$ID3)
acc <- aggregate(choice ~ ID3, data = sectdat, FUN = mean)
colnames(acc) <- c('ID3','acc')
Ntrial <- aggregate(trial ~ ID3, data = sectdat, FUN = length)
colnames(Ntrial) <- c('ID3','Ntrial')
bid <- aggregate(V3scld ~ ID3, data = sectdat, FUN = mean)
sdbid <- aggregate(sdbid3scld ~ ID3, data = sectdat, FUN = mean)
onesect <- merge(acc, bid, by = 'ID3')
onesect <- merge(onesect, Ntrial, by = 'ID3')
onesect <- merge(onesect, sdbid, by = 'ID3')
plot(acc ~ V3scld, data = onesect, xlab = 'Mean bid V3', ylab = '% Correct | (1, 2)', pch = 20, cex = (onesect$Ntrial)/10, main = sprintf('%s %s', v, tp))
test <- lm(acc ~ V3scld, data = onesect, weights = Ntrial)
if (!is.na(test$coefficients[2])){abline(test)}
Rgress <- rbind(Rgress, data.frame(subID = subID[s], Vagueness = v, TimePressure = tp, t(test$coefficients)))
AccID3 <- rbind(AccID3, data.frame(subID = subID[s], Vagueness = v, TimePressure = tp, onesect))
}
}
dev.copy(pdf,file.path(out_dir,'IndvChoice',sprintf("Choice~IDV3scld %s.pdf", subID[s])),height=6, width=6)
dev.off()
}
acc
Ntrial <- aggregate(trial ~ ID3, data = sectdat, FUN = length)
colnames(Ntrial) <- c('ID3','Ntrial')
bid <- aggregate(V3scld ~ ID3, data = sectdat, FUN = mean)
sdbid <- aggregate(sdbid3scld ~ ID3, data = sectdat, FUN = mean)
bid
sdbid
Ntrial
bid
sectdat
bid <- aggregate(V3scld ~ ID3, data = sectdat, FUN = mean)
bid
Ntrial <- aggregate(trial ~ ID3, data = sectdat, FUN = length)
Ntrial
acc <- aggregate(choice ~ ID3, data = sectdat, FUN = mean)
acc
sectdat$V3scld
bid <- aggregate(V3scld ~ ID3, data = sectdat, FUN = mean)
bid
sdbid <- aggregate(sdbid3scld ~ ID3, data = sectdat, FUN = mean)
sdbid
ask <- aggregate(V3scld ~ subID + ID3, data = grpdcsn, FUN = mean)
ask
