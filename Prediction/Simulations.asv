% Figure 1. Generating the predictions for the early and late noise

%% define directories
[os, ~, ~] = computer;
if os == 'MACI64'
    rootdir = '/Users/bs3667/Dropbox (NYU Langone Health)/';
    Gitdir = '~/Noise';
end
plot_dir = fullfile(rootdir, 'Bo Shen Working files/NoiseProject/Prediction');
addpath(genpath(Gitdir));

%% Colors
colorpalette = {'#0000FF', '#FFC0CB', '#ADD8E6', '#FF0000'};
rgbMatrix = [
    0, 0, 255;   % Blue
    255, 192, 203; % Pink
    173, 216, 230; % Light Blue
    255, 0, 0     % Red
    ]/255;
%% Early and late noise only
Tests = {'Early', 'Late'};
V1mean = 83;
V2mean = 88;
eps = 9;
eta = 0.8;

V3 = linspace(0, V1mean, 40)';
V1 = V1mean*ones(size(V3));
V2 = V2mean*ones(size(V3));

sdV1 = eps*ones(size(V3));
sdV2 = eps*ones(size(V3));
sdV3 = eps*ones(size(V3));

dat = table(V1,V2,V3,sdV1,sdV2,sdV3);
pars = [eta, 1, 1, 1];
[probsa, Ovlpsa, CVsa] = dDNaFig1(pars, dat);
[probsb, Ovlpsb, CVsb] = dDNbFig1(pars, dat);

%%
h = figure;
subplot(3,2,1); hold on;
plot(V3, CVsa(1,:), '-');
plot(V3, CVsb(1,:), '-');
plot(V3, CVsa(2,:), '-');
plot(V3, CVsb(2,:), '-');

subplot(3,2,3); hold on;
plot(V3, Ovlpsa(1,:), '--');
plot(V3, Ovlpsb(1,:), '-');

subplot(3,2,5); hold on;
plot(V3, Ovlpsa(1,:), '--');
plot(V3, Ovlpsb(1,:), '-');



ratio = probsb(2,:)./(probsb(1,:) + probsb(2,:))*100;
plot(V3, ratio, 'k-');

xlabel('V3');
ylabel('% Correct (V1 & V2)');

%%
mysavefig(h, sprintf('CV_Ovlp_Choice_%s', Test), plot_dir, 12, [4, 4]);