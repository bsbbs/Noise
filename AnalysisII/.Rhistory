par(mfrow=c(2,3))
for (mdli in 3:7)
{
bars <- fastbads$wp[fastbads$modeli == mdli]
plot(density(bars), xlab = 'wp', main = names[mdli], bty = 'n')
legend('topleft',sprintf('mean wp = %1.1f', mean(bars)), bty = 'n')
}
dev.copy(pdf,file.path(out_dir,sprintf("wp.pdf")),height=6, width=6)
dev.off()
par(mfrow=c(2,3))
for (mdli in 3:7)
{
bars <- fastbads$wp[fastbads$modeli == mdli]
plot(density(bars), xlab = 'wp', main = names[mdli], bty = 'n')
legend('topleft',sprintf('mean wp = %.3f', mean(bars)), bty = 'n')
}
dev.copy(pdf,file.path(out_dir,sprintf("wp.pdf")),height=6, width=6)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/AnalysisII')
# data_dir <- '/Users/bs3667/Documents/Projects/Noise/CESS-Bo/TaskProgram/log/txtDat'
data_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/TaskProgram/log/txtDat'
out_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/AnalysisII'
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
grpdcsn$chosenItem == 3
subjlist <- unique(grpdcsn$subID)
grpdcsn$chosenValue
plot(subID ~ chosenValue, data = grpdcsn, type = 'p')
redtrnsp
redtrnsp <- rgb(255,0,0,50, maxColorValue = 255)
bluetrnsp <- rgb(0,0,255,50, maxColorValue = 255)
plot(subID ~ chosenValue, data = grpdcsn, type = 'p', pch = 20, col = redtrnsp)
plot(chosenValue ~ subID, data = grpdcsn, type = 'p', pch = 20, col = redtrnsp)
subjlist
str(grpdcsn)
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# check again after change
str(grpbid)
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
# normalize within subjects
bidmax <- aggregate(bid ~ subID, data = grpbid, FUN = max)
grpbid$normbid <- 0
for (subi in 1:Nsubj)
{
indvmask <- grpbid$subID == subjlist[subi]
grpbid$normbid[indvmask] <- grpbid$bid[indvmask]/bidmax$bid[bidmax$subID == subjlist[subi]]
}
par(mfrow = c(2,1))
barx <- boxplot(normbid ~ subID, data = grpbid, las = 2)
normbidvar <- aggregate(normbid ~ subID, data = grpbid, FUN = sd)
barplot(normbid ~ subID, las = 2, data = normbidvar, col = 8)
dev.copy(pdf,file.path(out_dir,sprintf("BidQuality.pdf")), height=8, width=12)
dev.off()
blacklist <- c() # pick out the subjects whos bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
str(grpbid)
Ngroup <- aggregate(Group ~ subID, data = grpbid, FUN = unique)
subID <- unique(grpbid$subID)
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpdcsn)
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
# normalize within subjects
bidmax <- aggregate(bid ~ subID, data = grpbid, FUN = max)
grpbid$normbid <- 0
for (subi in 1:Nsubj)
{
indvmask <- grpbid$subID == subjlist[subi]
grpbid$normbid[indvmask] <- grpbid$bid[indvmask]/bidmax$bid[bidmax$subID == subjlist[subi]]
}
par(mfrow = c(2,1))
barx <- boxplot(normbid ~ subID, data = grpbid, las = 2)
normbidvar <- aggregate(normbid ~ subID, data = grpbid, FUN = sd)
barplot(normbid ~ subID, las = 2, data = normbidvar, col = 8)
dev.copy(pdf,file.path(out_dir,sprintf("BidQuality.pdf")), height=8, width=12)
dev.off()
blacklist <- c() # pick out the subjects whos bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
str(grpbid)
Ngroup <- aggregate(Group ~ subID, data = grpbid, FUN = unique)
subID <- unique(grpbid$subID)
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpdcsn)
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# check again after change
str(grpbid)
redtrnsp <- rgb(255,0,0,50, maxColorValue = 255)
bluetrnsp <- rgb(0,0,255,50, maxColorValue = 255)
subjlist <- unique(grpdcsn$subID)
subjlist
plot(chosenValue ~ subID, data = grpdcsn, type = 'p', pch = 20, col = redtrnsp)
str(grpdcsn)
grpdcsn$Group <- as.factor(grpdcsn$Group)
grpdcsn$subID <- as.factor(grpdcsn$subID)
grpdcsn$Vagueness <- as.factor(grpdcsn$Vagueness)
grpdcsn$TimePressure <- as.factor(grpdcsn$TimePressure)
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
plot(chosenValue ~ subID, data = grpdcsn, type = 'p', pch = 20, col = redtrnsp)
plot(chosenValue ~ subID, data = grpdcsn, type = 'p', pch = 20, las = 2, col = redtrnsp)
grpdcsn$chosenItem
plot(chosenValue ~ subID, data = grpdcsn, type = 'p', pch = 20, las = 2, col = redtrnsp)
points((chosenValue ~ subID, data = grpdcsn[grpdcsn$chosenItem == 3,], pch = 20, col = redtrnsp)
plot(chosenValue ~ subID, data = grpdcsn, type = 'p', pch = 20, las = 2, col = redtrnsp)
fastbads$subID[fastbads$wp<0]
fastbads$wp<0
fastbads$subID[fastbads$wp<0 & fastbads$modeli > 2]
fastbads$modeli > 2
str(fastbads)
fastbads$modeli == 3
fastbads$wp[fastbads$modeli == 3]
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == 4])
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == 4])
ablines(v = 0, lty = 2)
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == 4])
abline(v = 0, lty = 2)
abline(h = 0, lty = 2)
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == 4], xlab = names[3], ylab = names[4])
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == 4], xlab = names[3], ylab = names[4])
abline(v = 0, lty = 2)
abline(h = 0, lty = 2)
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == 4], xlab = names[3], ylab = names[4], main = 'wp')
abline(v = 0, lty = 2)
abline(h = 0, lty = 2)
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == 4], xlab = names[3], ylab = names[4], main = 'wp')
abline(v = 0, lty = 2)
abline(h = 0, lty = 2)
abline(a = 0, b = 1, lty = 2)
for (mdli in 4:7){
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == mdli], xlab = names[3], ylab = names[mdli], main = 'wp')
abline(v = 0, lty = 2)
abline(h = 0, lty = 2)
abline(a = 0, b = 1, lty = 2)}
par(mfrow=c(2,2))
for (mdli in 4:7){
plot(fastbads$wp[fastbads$modeli == 3], fastbads$wp[fastbads$modeli == mdli], xlab = names[3], ylab = names[mdli], main = 'wp')
abline(v = 0, lty = 2)
abline(h = 0, lty = 2)
abline(a = 0, b = 1, lty = 2)}
rank
order
wp <- aggregate(wp ~ subID, data = fastbads[fastbads$modeli == 3,])
wp <- aggregate(wp ~ subID, data = fastbads[fastbads$modeli == 3,], FUN = mean)
wp
sort(wp$wp)
chosenValue
grpdcsn$chosenID
table(grpdcsn$subID, grpdcsn$chosenItem)
table(grpdcsn$subID, grpdcsn$chosenID)
grpbid$subID == 22072001
grpbid[grpbid$subID == 22072001,]
grpbid[grpbid$subID == 22072001 && grpbid$item == 17,]
grpbid[grpbid$subID == 22072001 & grpbid$item == 17,]
table(grpdcsn$subID, grpdcsn$chosenValue)
str(grpdcsn)
indvdcsn
table(indvdcsn$chosenID, indvdcsn$ID1,indvdcsn$ID2,indvdcsn$ID3)
table(indvdcsn$chosenID, indvdcsn$ID1,indvdcsn$ID2)
table(indvdcsn$chosenID)
table(indvdcsn$chosenValue)
table(indvdcsn$ID1, indvdcsn$ID2)
table(indvdcsn$V1, indvdcsn$V2)
indvdcsn$chosenItem == 2
slctdat <- indvdcsn[indvdcsn$chosenItem == 2,]
table(slctdat$V1, slctdat$V2)
table(indvdcsn$V1, indvdcsn$V2)
slctdat <- indvdcsn[indvdcsn$chosenItem == 2,]
table(slctdat$V1, slctdat$V2)
slctdat <- indvdcsn[indvdcsn$chosenItem == 1,]
table(slctdat$V1, slctdat$V2)
grid <- aggregate(chosenItem ~ V1 + V2, data = indvdcsn, FUN = count)
grid <- aggregate(chosenItem ~ V1 + V2, data = indvdcsn, FUN = length())
grid <- aggregate(chosenItem ~ V1 + V2, data = indvdcsn, FUN = length)
grid
indvdcsn$chosenID
indvdcsn$chosenItem
indvdcsn$trial
grid <- aggregate(trial ~ V1 + V2 + chosenItem, data = indvdcsn, FUN = length)
grid
indvdcsn
clc
plot(V2 ~ V1, col = bluetrnsp, data = indvdcsn[indvdcsn$chosenItem == 2,])
plot(V2 ~ V1, col = bluetrnsp, pch = 20, data = indvdcsn[indvdcsn$chosenItem == 2,])
rnorm
rnorm(1, 0 ,1)
muydat
mydat
mydat <- indvdcsn
mydat$V1
mydat$V1 <- mydat$V1 + rnorm(length(mydat$V1), 0, mydat$V1/10)
mydat$V1
mydat$V2 <- mydat$V2 + rnorm(length(mydat$V2), 0, mydat$V2/10)
plot(V2 ~ V1, col = bluetrnsp, pch = 20, data = mydat[mydat$chosenItem == 2,])
points(V2 ~ V1, col = redtrnsp, pch = 20, data = mydat[mydat$chosenItem == 1,])
plot(V2 ~ V1, col = bluetrnsp, pch = 20, data = mydat[mydat$chosenItem == 2,])
points(V2 ~ V1, col = redtrnsp, pch = 20, data = mydat[mydat$chosenItem == 1,])
points(V2 ~ V1, col = "red", pch = 20, data = mydat[mydat$chosenItem == 3,])
mydat$V2/10
ID1
grpdcsn
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
# normalize within subjects
bidmax <- aggregate(bid ~ subID, data = grpbid, FUN = max)
grpbid$normbid <- 0
for (subi in 1:Nsubj)
{
indvmask <- grpbid$subID == subjlist[subi]
grpbid$normbid[indvmask] <- grpbid$bid[indvmask]/bidmax$bid[bidmax$subID == subjlist[subi]]
}
par(mfrow = c(2,1))
barx <- boxplot(normbid ~ subID, data = grpbid, las = 2)
normbidvar <- aggregate(normbid ~ subID, data = grpbid, FUN = sd)
barplot(normbid ~ subID, las = 2, data = normbidvar, col = 8)
dev.copy(pdf,file.path(out_dir,sprintf("BidQuality.pdf")), height=8, width=12)
dev.off()
blacklist <- c() # pick out the subjects whos bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
str(grpbid)
Ngroup <- aggregate(Group ~ subID, data = grpbid, FUN = unique)
subID <- unique(grpbid$subID)
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpdcsn)
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# check again after change
str(grpbid)
bid1 <- grpbid[grpbid$bid_times == 1,]
bid2 <- grpbid[grpbid$bid_times == 2,]
bid3 <- grpbid[grpbid$bid_times == 3,]
long <- merge(bid1, bid2, by = c('subID','item'))
long <- merge(long, bid3, by = c('subID','item'))
par(mfrow = c(2,2))
plot(long$bid.x, long$bid.y, pch = 20, cex = .3, xlab = 'bid 1', ylab = 'bid 2')
plot(long$bid, long$bid.y, pch = 20, cex = .3, xlab = 'bid 3', ylab = 'bid 2')
plot(long$bid.x, long$bid, pch = 20, cex = .3, xlab = 'bid 1', ylab = 'bid 3')
dev.copy(pdf,file.path(out_dir,'Bid123.pdf'),height=8, width=8)
dev.off()
Indvdir <- file.path(out_dir, 'IndvBid')
if (!file.exists(Indvdir))
{dir.create(Indvdir)}
# individual
for (s in 1:length(subID))
{
plot(meanbid$bid[meanbid$subID == subID[s] & meanbid$touched == 1],sdbid$bid[sdbid$subID == subID[s] & meanbid$touched == 1], pch = 20, col = 'red', xlab = 'Bid mean', ylab = 'Bid variance', main = subID[s])
points(meanbid$bid[meanbid$subID == subID[s] & meanbid$touched == 0],sdbid$bid[sdbid$subID == subID[s] & meanbid$touched == 0], pch = 20, col = 'blue')
legend('topleft',c('Touched (Precise)','Untouched (Vauge)'), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red','blue'), bty = 'n')
# save the figure
dev.copy(pdf,file.path(out_dir,'IndvBid',sprintf("BidVariance%s.pdf",subID[s])),height=4, width=4)
dev.off()
}
grpdcsn$Group <- as.factor(grpdcsn$Group)
grpdcsn$subID <- as.factor(grpdcsn$subID)
grpdcsn$Vagueness <- as.factor(grpdcsn$Vagueness)
grpdcsn$TimePressure <- as.factor(grpdcsn$TimePressure)
grpdcsn$VD <- grpdcsn$V2 - grpdcsn$V1 # in the design, V2 is always larger than V1
grpdcsn$choice <- grpdcsn$chosenItem - 1 # choose #1 coded as 0 (incorrect); choose #2 coded as 1 (correct); choose #3 coded as 2, discard; NaN choice not made
grpdcsn$normv3 <- grpdcsn$V3/(grpdcsn$V1 + grpdcsn$V2)*2
grpdcsn$V1scld <- grpdcsn$V1
grpdcsn$V2scld <- grpdcsn$V2
grpdcsn$V3scld <- grpdcsn$V3
subjlist <- unique(grpdcsn$subID)
for (s in subjlist)
{
mask <- grpdcsn$subID == s
maxval <- max(c(grpdcsn$V1[mask],grpdcsn$V2[mask],grpdcsn$V3[mask]))
minval <- min(c(grpdcsn$V1[mask],grpdcsn$V2[mask]))
grpdcsn$V1scld[mask] <- grpdcsn$V1[mask]/minval
grpdcsn$V2scld[mask] <- grpdcsn$V2[mask]/minval
grpdcsn$V3scld[mask] <- grpdcsn$V3[mask]/minval
}
grpdcsn$VDscld <- grpdcsn$V2scld - grpdcsn$V1scld
# discard the trials where V1 == V2
grpdcsn <- grpdcsn[grpdcsn$V1 != grpdcsn$V2,]
str(grpdcsn)
out_dir <- '/Users/bs3667/Noise/modelfit/Results/FastBADS_Mtlb/plot'
fastbads <- read.table('/Users/bs3667/Noise/modelfit/Results/FastBADS_Mtlb/Rslts_FastBADS_Best.txt', header = TRUE, sep = '\t')
fastbads <- fastbads[fastbads$subID < 48,]
fastbads$subID <- as.factor(fastbads$subID)
fastbads$name <- factor(fastbads$name, levels = c('McFadden','Model2','DN','dDNa','dDNb','dDNc','dDNd'))
fastbads$modeli <- as.factor(fastbads$modeli)
str(fastbads)
summary(test <- aov(nll ~ name + Error(subID), data = fastbads))
names <- unique(fastbads$name)
subjlist <- unique(fastbads$subID)
par(mfrow=c(3,2))
for (mdli in 1)
{
for (mdlj in 2:7)
{
bars <- fastbads$nll[fastbads$modeli == mdlj] - fastbads$nll[fastbads$modeli == mdli]
barplot(bars, ylab = 'nLL', xlab = 'Subjects', names = subjlist, main = sprintf('%s - %s', names[mdlj], names[mdli]))
legend('bottomleft',sprintf('delta nLL = %1.3f', sum(bars)), bty = 'n')
# plot(fastbads$nll[fastbads$modeli==mdli], fastbads$nll[fastbads$modeli==mdlj], type = 'p', pch = 20, xlab = names[mdli], ylab = names[mdlj], xlim = range(c(fastbads$nll[fastbads$modeli==mdli], fastbads$nll[fastbads$modeli==mdlj])), ylim = range(c(fastbads$nll[fastbads$modeli==mdli], fastbads$nll[fastbads$modeli==mdlj])))
# abline(a = 0, b = 1, lty = 1)
}
}
par(mfrow=c(3,2))
for (mdli in 2)
{
for (mdlj in 3:7)
{
bars <- fastbads$nll[fastbads$modeli == mdlj] - fastbads$nll[fastbads$modeli == mdli]
barplot(bars, ylab = 'nLL', xlab = 'Subjects', names = subjlist, main = sprintf('%s - %s', names[mdlj], names[mdli]))
legend('bottomleft',sprintf('delta nLL = %1.3f', sum(bars)), bty = 'n')
}
}
par(mfrow=c(2,2))
for (mdli in 3)
{
for (mdlj in 4:7)
{
bars <- fastbads$nll[fastbads$modeli == mdlj] - fastbads$nll[fastbads$modeli == mdli]
barplot(bars, ylab = 'nLL', xlab = 'Subjects', names = subjlist, main = sprintf('%s - %s', names[mdlj], names[mdli]))
legend('bottomleft',sprintf('delta nLL = %1.3f', sum(bars)), bty = 'n')
}
}
par(mfrow=c(1,2))
for (mdli in 1:2)
{
bars <- fastbads$eta[fastbads$modeli == mdli]
plot(density(bars), xlab = 'eta', main = names[mdli], bty = 'n')
legend('topleft',sprintf('mean eta = %1.1f', mean(bars)), bty = 'n')
}
dev.copy(pdf,file.path(out_dir,sprintf("eta.pdf")),height=3, width=6)
dev.off()
par(mfrow=c(2,3))
for (mdli in 3:7)
{
bars <- fastbads$Mp[fastbads$modeli == mdli]
plot(density(bars), xlab = 'Mp', main = names[mdli], bty = 'n')
legend('topleft',sprintf('mean Mp = %1.1f', mean(bars)), bty = 'n')
}
dev.copy(pdf,file.path(out_dir,sprintf("Mp.pdf")),height=6, width=6)
dev.off()
par(mfrow=c(2,3))
for (mdli in 3:7)
{
bars <- fastbads$wp[fastbads$modeli == mdli]
plot(density(bars), xlab = 'wp', main = names[mdli], bty = 'n')
legend('topleft',sprintf('mean wp = %.3f', mean(bars)), bty = 'n')
}
dev.copy(pdf,file.path(out_dir,sprintf("wp.pdf")),height=6, width=6)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/AnalysisII')
Analysis <- '/Users/bs3667/Noise/modelfit/Results/FastBADS_nonNgtv'
out_dir <- file.path(Analysis,'plot')
fastbads <- read.table(file.path(Analysis,'Rslts_FastBADS_Best.txt'), header = TRUE, sep = '\t')
fastbads <- fastbads[fastbads$subID < 48,]
fastbads$subID <- as.factor(fastbads$subID)
fastbads$name <- factor(fastbads$name, levels = c('McFadden','Model2','DN','dDNa','dDNb','dDNc','dDNd'))
fastbads$modeli <- as.factor(fastbads$modeli)
str(fastbads)
summary(test <- aov(nll ~ name + Error(subID), data = fastbads))
names <- unique(fastbads$name)
subjlist <- unique(fastbads$subID)
Analysis <- '/Users/bs3667/Noise/modelfit/Results/FastBADS_nonNgtv'
out_dir <- file.path(Analysis,'plot')
fastbads <- read.table(file.path(Analysis,'Rslts_FastBADS_Best.txt'), header = TRUE, sep = '\t')
fastbads <- fastbads[fastbads$subID < 48,]
fastbads$subID <- as.factor(fastbads$subID)
fastbads$name <- factor(fastbads$name, levels = c('McFadden','Model2','DN','dDNa','dDNb','dDNc','dDNd'))
fastbads$modeli <- as.factor(fastbads$modeli)
str(fastbads)
summary(test <- aov(nll ~ name + Error(subID), data = fastbads))
names <- unique(fastbads$name)
subjlist <- unique(fastbads$subID)
# Model comparison
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
dev.copy(pdf,file.path(out_dir,sprintf("Model2_vs_McFadden.pdf")),height=3, width=3)
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
hist(bars, xlab = 'nLL', main = sprintf('%s - %s', names[2], names[1]), 20)
legend('bottomleft',sprintf('delta nLL = %1.3f', sum(bars)), bty = 'n')
dev.copy(pdf,file.path(out_dir,sprintf("Model2_vs_McFadden.pdf")),height=3, width=3)
dev.off()
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
hist(bars, xlab = 'nLL', main = sprintf('%s - %s', names[2], names[1]), 20, ylim = c(-20,20))
legend('bottomleft',sprintf('delta nLL = %1.3f', sum(bars)), bty = 'n')
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
hist(bars, xlab = 'nLL', main = sprintf('%s - %s', names[2], names[1]), 20, xlim = c(-20,20))
legend('bottomleft',sprintf('delta nLL = %1.3f', sum(bars)), bty = 'n')
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
hist(bars, xlab = 'nLL', main = sprintf('%s - %s', names[2], names[1]), 50, xlim = c(-12,12))
legend('bottomleft',sprintf('delta nLL = %1.3f', sum(bars)), bty = 'n')
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
hist(bars, xlab = 'nLL', main = sprintf('%s - %s', names[2], names[1]), 50, xlim = c(-12,12))
legend('bottomleft',sprintf('delta nLL = %1.3f', sum(bars)), bty = 'n')
bars
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
hist(bars, xlab = 'nLL', main = sprintf('%s - %s', names[2], names[1]), 50, xlim = c(-12,12))
#legend('bottomleft',sprintf('\Delta nLL = %1.3f', sum(bars)), bty = 'n')
legend('bottomleft', sprintf('\\Delta nLL = %1.3f', sum(bars)), bty = 'n')
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
hist(bars, xlab = 'nLL', main = sprintf('%s - %s', names[2], names[1]), 50, xlim = c(-12,12))
legend('bottomleft', legend = expression(Delta~nLL == 1.234), bty = 'n')
sum(bars)
bars <- fastbads$nll[fastbads$modeli == 2] - fastbads$nll[fastbads$modeli == 1]
hist(bars, xlab = 'nLL', main = sprintf('%s - %s', names[2], names[1]), 50, xlim = c(-12,12))
legend('left', legend = expression(With outlier: Delta~nLL == -93.6), bty = 'n')
range(bars)
sum(bars[bars>-100])
