abline(lm(bidvar ~ bidmean, data = patchdat), col = 'blue', lwd = 3)
legend('topleft',c('Precise','Vague'), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red','blue'), bty = 'n')
dev.copy(pdf,file.path(out_dir,sprintf("Paper_BidVariance_B.pdf")),height=4, width=3.7)
dev.off()
3.7*4.2/4
redtrnsp <- rgb(255,0,0,50, maxColorValue = 255)
bluetrnsp <- rgb(0,0,255,50, maxColorValue = 255)
# group overlay
for (s in 1:length(subID))
{
indvdat <- mrgdat[mrgdat$subID == subID[s],]
patchdat <- indvdat[indvdat$touched == 1,]
if (s == 1){plot(patchdat$bidmean, patchdat$bidvar, pch = 20, col = 'red', xlab = ' ', ylab = ' ', xlim = c(0,90), ylim = c(0,500), frame.plot = TRUE, axes = FALSE,  xaxt = "n", yaxt = "n")}else{points(patchdat$bidmean,patchdat$bid.y, pch = 20, col = redtrnsp)}
abline(lm(bid.y ~ bidmean, data = patchdat), col = redtrnsp)
}
patchdat <- mrgdat[mrgdat$touched == 1,]
abline(lm(bidvar ~ bidmean, data = patchdat), col = 'red', lwd = 3)
axis(1, at = c(seq(0,90,20)),  tck = 0.02, padj = -1.4, cex.axis = .8)
axis(2, tck = 0.02, at = c(seq(0,500,100)), padj = 1.4, cex.axis = .8)
title(ylab = 'Bid variance', mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
title(xlab = "Bid mean", mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
legend('topleft',c('Precise',' '), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red',NA), bty = 'n')
dev.copy(pdf,file.path(out_dir,sprintf("Paper_BidVariance_A.pdf")),height=4, width=3.7)
dev.off()
for (s in 1:length(subID))
{
indvdat <- mrgdat[mrgdat$subID == subID[s],]
patchdat <- indvdat[indvdat$touched == 0,]
points(patchdat$bidmean, patchdat$bidvar, pch = 20, col = bluetrnsp)
abline(lm(bidvar ~ bidmean, data = patchdat), col = bluetrnsp)
}
patchdat <- mrgdat[mrgdat$touched == 0,]
abline(lm(bidvar ~ bidmean, data = patchdat), col = 'blue', lwd = 3)
legend('topleft',c('Precise','Vague'), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red','blue'))
dev.copy(pdf,file.path(out_dir,sprintf("Paper_BidVariance_B.pdf")),height=4.2, width=3.885)
dev.off()
redtrnsp <- rgb(255,0,0,50, maxColorValue = 255)
bluetrnsp <- rgb(0,0,255,50, maxColorValue = 255)
# group overlay
for (s in 1:length(subID))
{
indvdat <- mrgdat[mrgdat$subID == subID[s],]
patchdat <- indvdat[indvdat$touched == 1,]
if (s == 1){plot(patchdat$bidmean, patchdat$bidvar, pch = 20, col = 'red', xlab = ' ', ylab = ' ', xlim = c(0,90), ylim = c(0,500), frame.plot = TRUE, axes = FALSE,  xaxt = "n", yaxt = "n")}else{points(patchdat$bidmean,patchdat$bid.y, pch = 20, col = redtrnsp)}
abline(lm(bid.y ~ bidmean, data = patchdat), col = redtrnsp)
}
patchdat <- mrgdat[mrgdat$touched == 1,]
abline(lm(bidvar ~ bidmean, data = patchdat), col = 'red', lwd = 3)
axis(1, at = c(seq(0,90,20)),  tck = 0.02, padj = -1.4, cex.axis = .8)
axis(2, tck = 0.02, at = c(seq(0,500,100)), padj = 1.4, cex.axis = .8)
title(ylab = 'Bid variance', mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
title(xlab = "Bid mean", mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
legend('topleft',c('Precise',' '), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red',NA), bty = 'n')
dev.copy(pdf,file.path(out_dir,sprintf("Paper_BidVariance_A.pdf")),height=4, width=3.7)
dev.off()
for (s in 1:length(subID))
{
indvdat <- mrgdat[mrgdat$subID == subID[s],]
patchdat <- indvdat[indvdat$touched == 0,]
points(patchdat$bidmean, patchdat$bidvar, pch = 20, col = bluetrnsp)
abline(lm(bidvar ~ bidmean, data = patchdat), col = bluetrnsp)
}
patchdat <- mrgdat[mrgdat$touched == 0,]
abline(lm(bidvar ~ bidmean, data = patchdat), col = 'blue', lwd = 3)
legend('topright',c('Precise','Vague'), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red','blue'))
dev.copy(pdf,file.path(out_dir,sprintf("Paper_BidVariance_B.pdf")),height=4.2, width=3.885)
dev.off()
redtrnsp <- rgb(255,0,0,50, maxColorValue = 255)
bluetrnsp <- rgb(0,0,255,50, maxColorValue = 255)
# group overlay
for (s in 1:length(subID))
{
indvdat <- mrgdat[mrgdat$subID == subID[s],]
patchdat <- indvdat[indvdat$touched == 1,]
if (s == 1){plot(patchdat$bidmean, patchdat$bidvar, pch = 20, col = 'red', xlab = ' ', ylab = ' ', xlim = c(0,90), ylim = c(0,500), frame.plot = TRUE, axes = FALSE,  xaxt = "n", yaxt = "n")}else{points(patchdat$bidmean,patchdat$bid.y, pch = 20, col = redtrnsp)}
abline(lm(bid.y ~ bidmean, data = patchdat), col = redtrnsp)
}
patchdat <- mrgdat[mrgdat$touched == 1,]
abline(lm(bidvar ~ bidmean, data = patchdat), col = 'red', lwd = 3)
axis(1, at = c(seq(0,90,20)),  tck = 0.02, padj = -1.4, cex.axis = .8)
axis(2, tck = 0.02, at = c(seq(0,500,100)), padj = 1.4, cex.axis = .8)
title(ylab = 'Bid variance', mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
title(xlab = "Bid mean", mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
#legend('topleft',c('Precise',' '), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red',NA), bty = 'n')
dev.copy(pdf,file.path(out_dir,sprintf("Paper_BidVariance_A.pdf")),height=4, width=3.7)
dev.off()
for (s in 1:length(subID))
{
indvdat <- mrgdat[mrgdat$subID == subID[s],]
patchdat <- indvdat[indvdat$touched == 0,]
points(patchdat$bidmean, patchdat$bidvar, pch = 20, col = bluetrnsp)
abline(lm(bidvar ~ bidmean, data = patchdat), col = bluetrnsp)
}
patchdat <- mrgdat[mrgdat$touched == 0,]
abline(lm(bidvar ~ bidmean, data = patchdat), col = 'blue', lwd = 3)
legend('topright',c('Precise','Vague'), text.col = c('red','blue'), pch = 20, cex = .8, col = c('red','blue'))
dev.copy(pdf,file.path(out_dir,sprintf("Paper_BidVariance_B.pdf")),height=4.2, width=3.885)
dev.off()
condlist <- c(1,4,2,3)
condnames <- c('Vague-Low','Precise-Low','Vauge-High','Precise-High')
condcolors <- c('blue','pink','lightblue','red')
vaguevec <- c('Vague','Precise','Vague','Precise')
timevec <- c('Low','Low','High','High')
LowestV3 <- 0.2 # chose V3 higher than zero, to avoid the effect when V3 = 0, the early noise cannot be effectively regulated
Sldwndwdat <- c()
i <- 0
for (ci in condlist) # decision noise
{
i <- i + 1
v <- vaguevec[ci]
tp <- timevec[ci]
if (v == 'Vague' & tp == 'Low'){mycol <- 'blue'}
if (v == 'Precise' & tp == 'High'){mycol <- 'red'}
if (v == 'Precise' & tp == 'Low'){mycol <- 'pink'}
if (v == 'Vague' & tp == 'High'){mycol <- 'lightblue'}
onesect <- AccID3[AccID3$Vagueness == v & AccID3$TimePressure == tp & AccID3$V3scld > LowestV3,] #  & AccID3$V3scld > 0.2
acc <- c()
Ntrial <- c()
v3vec <- seq(LowestV3, 1, .015)
for (v3 in v3vec)
{
mask <- onesect$V3scld > v3 -.15 & onesect$V3scld < v3 + .15
Ntrial <- rbind(Ntrial, sum(mask)*15)
acc <- rbind(acc, weighted.mean(onesect[mask,]$acc,onesect[mask,]$Ntrial))
}
cut <- Ntrial > 400
Sldwndwdat <- rbind(Sldwndwdat, data.frame(v3 = v3vec[cut], acc = acc[cut], Ntrial = Ntrial[cut], TimePressure = tp, Vagueness = v))
if (i == 1)
{plot(v3vec[cut], acc[cut], cex = (Ntrial[cut])/600, col = mycol, xlim = c(LowestV3, 1.0), ylim = c(63,73), xlab=' ', ylab=' ', axes = FALSE, frame.plot = TRUE)
axis(1, at = c(seq(LowestV3,1,.2)),  tck = -0.03, padj = -1.4, cex.axis = .8)
axis(2, tck = -0.03, at = seq(63,75,3), padj = 1.4, cex.axis = .8)
title(ylab = '% Correct (V1 & V2)', mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
title(xlab = "Scaled V3", mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
}else{points(v3vec[cut], acc[cut], cex = (Ntrial[cut])/600, col = mycol)}
lines(v3vec[cut], acc[cut], col = mycol)
test <- lm(acc[cut] ~ v3vec[cut], weights = Ntrial[cut])
abline(test, col = mycol)
# V1 <- grpdcsn$V1scld[grpdcsn$TimePressure == tp & grpdcsn$Vagueness == v & grpdcsn$choice <= 1 & grpdcsn$V3scld > 0]
# V2 <- grpdcsn$V2scld[grpdcsn$TimePressure == tp & grpdcsn$Vagueness == v & grpdcsn$choice <= 1 & grpdcsn$V3scld > 0]
# y <- .78 + ((vi-1)*2 + tpi)/40*rep(1, length(V1))
# points(V1, y - .005, col = mycol, pch = 20, cex = .3)
# points(V2, y, col = mycol, pch = 17, cex = .3)
legend(x = .25, y = 73.7, condnames[condlist[1:i]], cex = .8, text.col = condcolors[condlist[1:i]], bty = 'n')
dev.copy(pdf, file.path(out_dir,sprintf("Choice~IDV3scldtomin_SldWndwWght_%i.pdf", i)), height=4.4, width=4)
dev.off()
}
AccID3 <- c()
Rgress <- c()
subID <- unique(grpdcsn$subID)
Vagueness <- unique(grpdcsn$Vagueness)
TimePressure <- unique(grpdcsn$TimePressure)
#par(mfrow = c(2,2))
vi <- 0
for (v in Vagueness) # decision noise
{
vi <- vi + 1
tpi <- 0
for (tp in TimePressure) # representation noise
{
if (v == 'Vague' & tp == 'Low'){mycol <- 'blue'}
if (v == 'Precise' & tp == 'High'){mycol <- 'pink'}
if (v == 'Precise' & tp == 'Low'){mycol <- 'red'}
if (v == 'Vague' & tp == 'High'){mycol <- 'lightblue'}
tpi <- tpi + 1
sectdat <- grpdcsn[grpdcsn$TimePressure == tp & grpdcsn$Vagueness == v & grpdcsn$chosenItem != 3 & !is.nan(grpdcsn$chosenItem),]
acc <- aggregate(choice ~ V3scld, data = sectdat, FUN = mean)
colnames(acc) <- c('V3scld','acc')
acc$acc <- acc$acc*100
Ntrial <- aggregate(trial ~ V3scld, data = sectdat, FUN = length)
colnames(Ntrial) <- c('V3scld','Ntrial')
onesect <- merge(acc, Ntrial, by = 'V3scld')
# onesect <- onesect[onesect$V3scld > 0,]
if (vi == 1 & tpi == 1){plot(acc ~ V3scld, data = onesect, xlab = 'Scaled V3', ylab = '% Correct (V1 & V2)', pch = 20, cex = (onesect$Ntrial)/10, type = 'n', main = sprintf('%s %s', v, tp))}
test <- lm(acc ~ V3scld, data = onesect, weights = Ntrial)
if (!is.na(test$coefficients[2])){abline(test, col = mycol)}
Rgress <- rbind(Rgress, data.frame(Vagueness = v, TimePressure = tp, t(test$coefficients)))
AccID3 <- rbind(AccID3, data.frame(Vagueness = v, TimePressure = tp, onesect))
}
}
legend('topleft',c('Precise:Low','Vague:Low','Precise:High','Vauge:High'), text.col = c('red','blue','pink','lightblue'), bty = 'n')
dev.copy(pdf,file.path(out_dir,sprintf("Choice~IDV3scldtominval_Pool.pdf")),height=4, width=4)
dev.off()
condlist <- c(1,4,2,3)
condnames <- c('Vague-Low','Precise-Low','Vauge-High','Precise-High')
condcolors <- c('blue','pink','lightblue','red')
vaguevec <- c('Vague','Precise','Vague','Precise')
timevec <- c('Low','Low','High','High')
LowestV3 <- 0.2 # chose V3 higher than zero, to avoid the effect when V3 = 0, the early noise cannot be effectively regulated
Sldwndwdat <- c()
i <- 0
for (ci in condlist) # decision noise
{
i <- i + 1
v <- vaguevec[ci]
tp <- timevec[ci]
if (v == 'Vague' & tp == 'Low'){mycol <- 'blue'}
if (v == 'Precise' & tp == 'High'){mycol <- 'red'}
if (v == 'Precise' & tp == 'Low'){mycol <- 'pink'}
if (v == 'Vague' & tp == 'High'){mycol <- 'lightblue'}
onesect <- AccID3[AccID3$Vagueness == v & AccID3$TimePressure == tp & AccID3$V3scld > LowestV3,] #  & AccID3$V3scld > 0.2
acc <- c()
Ntrial <- c()
v3vec <- seq(LowestV3, 1, .015)
for (v3 in v3vec)
{
mask <- onesect$V3scld > v3 -.15 & onesect$V3scld < v3 + .15
Ntrial <- rbind(Ntrial, sum(mask)*15)
acc <- rbind(acc, weighted.mean(onesect[mask,]$acc,onesect[mask,]$Ntrial))
}
cut <- Ntrial > 400
Sldwndwdat <- rbind(Sldwndwdat, data.frame(v3 = v3vec[cut], acc = acc[cut], Ntrial = Ntrial[cut], TimePressure = tp, Vagueness = v))
if (i == 1)
{plot(v3vec[cut], acc[cut], cex = (Ntrial[cut])/600, col = mycol, xlim = c(LowestV3, 1.0), ylim = c(63,73), xlab=' ', ylab=' ', axes = FALSE, frame.plot = TRUE)
axis(1, at = c(seq(LowestV3,1,.2)),  tck = -0.03, padj = -1.4, cex.axis = .8)
axis(2, tck = -0.03, at = seq(63,75,3), padj = 1.4, cex.axis = .8)
title(ylab = '% Correct (V1 & V2)', mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
title(xlab = "Scaled V3", mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
}else{points(v3vec[cut], acc[cut], cex = (Ntrial[cut])/600, col = mycol)}
lines(v3vec[cut], acc[cut], col = mycol)
test <- lm(acc[cut] ~ v3vec[cut], weights = Ntrial[cut])
abline(test, col = mycol)
# V1 <- grpdcsn$V1scld[grpdcsn$TimePressure == tp & grpdcsn$Vagueness == v & grpdcsn$choice <= 1 & grpdcsn$V3scld > 0]
# V2 <- grpdcsn$V2scld[grpdcsn$TimePressure == tp & grpdcsn$Vagueness == v & grpdcsn$choice <= 1 & grpdcsn$V3scld > 0]
# y <- .78 + ((vi-1)*2 + tpi)/40*rep(1, length(V1))
# points(V1, y - .005, col = mycol, pch = 20, cex = .3)
# points(V2, y, col = mycol, pch = 17, cex = .3)
legend(x = .25, y = 73.7, condnames[condlist[1:i]], cex = .8, text.col = condcolors[condlist[1:i]], bty = 'n')
dev.copy(pdf, file.path(out_dir,sprintf("Choice~IDV3scldtomin_SldWndwWght_%i.pdf", i)), height=4.4, width=4)
dev.off()
}
Sldwndwdat$TimePressure <- factor(Sldwndwdat$TimePressure, levels = c('Low','High'))
Sldwndwdat$Vagueness <- factor(Sldwndwdat$Vagueness, levels = c('Precise','Vague'))
summary(test <- lm(acc ~ v3*Vagueness, weights = Ntrial, data = Sldwndwdat[Sldwndwdat$TimePressure == 'Low',]))
summary(test <- lm(acc ~ v3*Vagueness, weights = Ntrial, data = Sldwndwdat[Sldwndwdat$TimePressure == 'High',]))
summary(test <- lm(acc ~ v3*TimePressure, weights = Ntrial, data = Sldwndwdat[Sldwndwdat$Vagueness == 'Precise',]))
summary(test <- lm(acc ~ v3*TimePressure, weights = Ntrial, data = Sldwndwdat[Sldwndwdat$Vagueness == 'Vague',]))
condlist <- c(1,4,2,3)
condnames <- c('Vague-Low','Precise-Low','Vauge-High','Precise-High')
condcolors <- c('blue','pink','lightblue','red')
vaguevec <- c('Vague','Precise','Vague','Precise')
timevec <- c('Low','Low','High','High')
LowestV3 <- 0.2 # chose V3 higher than zero, to avoid the effect when V3 = 0, the early noise cannot be effectively regulated
Sldwndwdat <- c()
i <- 0
for (ci in condlist) # decision noise
{
i <- i + 1
v <- vaguevec[ci]
tp <- timevec[ci]
if (v == 'Vague' & tp == 'Low'){mycol <- 'blue'}
if (v == 'Precise' & tp == 'High'){mycol <- 'red'}
if (v == 'Precise' & tp == 'Low'){mycol <- 'pink'}
if (v == 'Vague' & tp == 'High'){mycol <- 'lightblue'}
onesect <- AccID3[AccID3$Vagueness == v & AccID3$TimePressure == tp & AccID3$V3scld > LowestV3,] #  & AccID3$V3scld > 0.2
acc <- c()
Ntrial <- c()
v3vec <- seq(LowestV3, 1, .015)
for (v3 in v3vec)
{
mask <- onesect$V3scld > v3 -.15 & onesect$V3scld < v3 + .15
Ntrial <- rbind(Ntrial, sum(mask)*15)
acc <- rbind(acc, weighted.mean(onesect[mask,]$acc,onesect[mask,]$Ntrial))
}
cut <- Ntrial > 400
Sldwndwdat <- rbind(Sldwndwdat, data.frame(v3 = v3vec[cut], acc = acc[cut], Ntrial = Ntrial[cut], TimePressure = tp, Vagueness = v))
if (i == 1)
{plot(v3vec[cut], acc[cut], cex = (Ntrial[cut])/600, col = mycol, xlim = c(LowestV3, 1.0), ylim = c(63,73), xlab=' ', ylab=' ', axes = FALSE, frame.plot = TRUE)
axis(1, at = c(seq(LowestV3,1,.2)),  tck = 0.02, padj = -1.4, cex.axis = .8)
axis(2, tck = 0.02, at = seq(63,75,3), padj = 1.4, cex.axis = .8)
title(ylab = '% Correct (V1 & V2)', mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
title(xlab = "Scaled V3", mgp = c(1.2,0,0), font.lab = 1, cex.lab = 1)
}else{points(v3vec[cut], acc[cut], cex = (Ntrial[cut])/600, col = mycol)}
lines(v3vec[cut], acc[cut], col = mycol)
test <- lm(acc[cut] ~ v3vec[cut], weights = Ntrial[cut])
abline(test, col = mycol)
# V1 <- grpdcsn$V1scld[grpdcsn$TimePressure == tp & grpdcsn$Vagueness == v & grpdcsn$choice <= 1 & grpdcsn$V3scld > 0]
# V2 <- grpdcsn$V2scld[grpdcsn$TimePressure == tp & grpdcsn$Vagueness == v & grpdcsn$choice <= 1 & grpdcsn$V3scld > 0]
# y <- .78 + ((vi-1)*2 + tpi)/40*rep(1, length(V1))
# points(V1, y - .005, col = mycol, pch = 20, cex = .3)
# points(V2, y, col = mycol, pch = 17, cex = .3)
legend(x = .25, y = 73.7, condnames[condlist[1:i]], cex = .8, text.col = condcolors[condlist[1:i]], bty = 'n')
dev.copy(pdf, file.path(out_dir,sprintf("Choice~IDV3scldtomin_SldWndwWght_%i.pdf", i)), height=4.4, width=4)
dev.off()
}
Sldwndwdat$TimePressure <- factor(Sldwndwdat$TimePressure, levels = c('Low','High'))
Sldwndwdat$Vagueness <- factor(Sldwndwdat$Vagueness, levels = c('Precise','Vague'))
summary(test <- lm(acc ~ v3*Vagueness, weights = Ntrial, data = Sldwndwdat[Sldwndwdat$TimePressure == 'Low',]))
summary(test <- lm(acc ~ v3*Vagueness, weights = Ntrial, data = Sldwndwdat[Sldwndwdat$TimePressure == 'High',]))
summary(test <- lm(acc ~ v3*TimePressure, weights = Ntrial, data = Sldwndwdat[Sldwndwdat$Vagueness == 'Precise',]))
summary(test <- lm(acc ~ v3*TimePressure, weights = Ntrial, data = Sldwndwdat[Sldwndwdat$Vagueness == 'Vague',]))
grpdcsn
str(grpdcsn)
varbid
varbid
str(grpdcsn)
(sdbid$bid)^2 - varbid$bid
hist((sdbid$bid)^2 - varbid$bid)
tmp <- varbid
names(tmp)
names(tmp)
names(tmp) <- c('ID1','touched','subID','varbid')
tmp
str(tmp)
tmp[:,-2]
tmp(:,-2)
tmp[,-2]
# combine the variance of items into it
tmp <- varbid
names(tmp) <- c('ID1','touched','subID','varbid1')
# combine the variance of items into it
tmp <- varbid
names(tmp) <- c('ID1','touched','subID','varbid1')
test <- merge(grpdcsn, tmp[,-2], by = c('subID','ID1'))
str(test)
tmp <- varbid
names(tmp) <- c('ID2','touched','subID','varbid2')
test <- merge(test, tmp[,-2], by = c('subID','ID2'))
str(test)
tmp <- varbid
names(tmp) <- c('ID3','touched','subID','varbid3')
test <- merge(test, tmp[,-2], by = c('subID','ID3'))
str(test)
data_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/TaskProgram/log/txtDat'
out_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII'
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII')
data_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/TaskProgram/log/txtDat'
out_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII'
filelistbid <- list.files(path = data_dir, pattern = 'BidTask_')
filelistchoice <- list.files(path = data_dir, pattern = 'MainTask_')
grpbid <- c()
grpdcsn <- c()
for (s in 1:length(filelistbid))
{
indvbid <- read.table(file.path(data_dir,filelistbid[s]), head = TRUE, sep = '\t')
grpbid <- rbind(grpbid,indvbid)
indvdcsn <- read.table(file.path(data_dir,filelistchoice[s]), head = TRUE, sep = '\t')
grpdcsn <- rbind(grpdcsn,indvdcsn)
}
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
# normalize within subjects
bidmax <- aggregate(bid ~ subID, data = grpbid, FUN = max)
grpbid$normbid <- 0
for (subi in 1:Nsubj)
{
indvmask <- grpbid$subID == subjlist[subi]
grpbid$normbid[indvmask] <- grpbid$bid[indvmask]/bidmax$bid[bidmax$subID == subjlist[subi]]
}
par(mfrow = c(2,1))
barx <- boxplot(normbid ~ subID, data = grpbid, las = 2)
normbidvar <- aggregate(normbid ~ subID, data = grpbid, FUN = sd)
barplot(normbid ~ subID, las = 2, data = normbidvar, col = 8)
dev.copy(pdf,file.path(out_dir,sprintf("BidQuality.pdf")), height=8, width=12)
dev.off()
blacklist <- c() # pick out the subjects whos bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
str(grpbid)
Ngroup <- aggregate(Group ~ subID, data = grpbid, FUN = unique)
subID <- unique(grpbid$subID)
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpdcsn)
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# check again after change
str(grpbid)
bid1 <- grpbid[grpbid$bid_times == 1,]
bid2 <- grpbid[grpbid$bid_times == 2,]
bid3 <- grpbid[grpbid$bid_times == 3,]
long <- merge(bid1, bid2, by = c('subID','item'))
long <- merge(long, bid3, by = c('subID','item'))
par(mfrow = c(2,2))
plot(long$bid.x, long$bid.y, pch = 20, cex = .3, xlab = 'bid 1', ylab = 'bid 2')
plot(long$bid, long$bid.y, pch = 20, cex = .3, xlab = 'bid 3', ylab = 'bid 2')
plot(long$bid.x, long$bid, pch = 20, cex = .3, xlab = 'bid 1', ylab = 'bid 3')
dev.copy(pdf,file.path(out_dir,'Bid123.pdf'),height=8, width=8)
dev.off()
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
bid1 <- grpbid[grpbid$bid_times == 1,]
bid2 <- grpbid[grpbid$bid_times == 2,]
bid3 <- grpbid[grpbid$bid_times == 3,]
long <- merge(bid1, bid2, by = c('subID','item'))
long <- merge(long, bid3, by = c('subID','item'))
par(mfrow = c(2,2))
plot(long$bid.x, long$bid.y, pch = 20, cex = .3, xlab = 'bid 1', ylab = 'bid 2')
plot(long$bid, long$bid.y, pch = 20, cex = .3, xlab = 'bid 3', ylab = 'bid 2')
plot(long$bid.x, long$bid, pch = 20, cex = .3, xlab = 'bid 1', ylab = 'bid 3')
dev.copy(pdf,file.path(out_dir,'Bid123.pdf'),height=8, width=8)
dev.off()
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# check again after change
str(grpbid)
subjlist <- unique(grpbid$subID)
Nsubj <- length(subjlist)
# normalize within subjects
bidmax <- aggregate(bid ~ subID, data = grpbid, FUN = max)
grpbid$normbid <- 0
for (subi in 1:Nsubj)
{
indvmask <- grpbid$subID == subjlist[subi]
grpbid$normbid[indvmask] <- grpbid$bid[indvmask]/bidmax$bid[bidmax$subID == subjlist[subi]] # scale down the bid value to the maximum bid of each individual
}
par(mfrow = c(2,1))
barx <- boxplot(normbid ~ subID, data = grpbid, las = 2)
normbidvar <- aggregate(normbid ~ subID, data = grpbid, FUN = sd)
barplot(normbid ~ subID, las = 2, data = normbidvar, col = 8)
dev.copy(pdf,file.path(out_dir,sprintf("BidQuality.pdf")), height=8, width=12)
dev.off()
blacklist <- c() # pick out the subjects whos bidding on the precise targets (the highest 6 items) are all zero
for (subi in 1:Nsubj)
{
indvdat <- grpbid[grpbid$subID == subjlist[subi],]
itemmean <- aggregate(bid ~ item + patch + Group, data = indvdat, FUN = mean)
itemmean$touch <- itemmean$patch == itemmean$Group
bidord <- order(itemmean$bid)
itemmean$ord <- bidord
itemmean <- itemmean[bidord,]
items <- 1:36
plot(items, itemmean$bid, type = 'l', main = subjlist[subi])
points(items[itemmean$bid > 0], itemmean$bid[itemmean$bid > 0], pch = 20)
preciseitems <- itemmean$item[itemmean$touch == TRUE]
loc <- rank(itemmean$ord[itemmean$touch == TRUE]) > 12
mask <- itemmean$item %in% preciseitems[loc]
points(items[mask],itemmean$bid[mask], pch = 1, col = 2)
if (all(itemmean$bid[mask] == 0))
{
blacklist <- c(blacklist, subjlist[subi])
}
}
blacklist <- c(blacklist, '22102708', '22071913', '22110306')
# 22071913 bid all V3 as zero, 22102708 bid all v3 and five targets as zero, 22110306 bid one of the targets as zero
grpbid <- grpbid[!grpbid$subID %in% blacklist,]
str(grpbid)
Ngroup <- aggregate(Group ~ subID, data = grpbid, FUN = unique)
subID <- unique(grpbid$subID)
grpdcsn <- grpdcsn[!grpdcsn$subID %in% blacklist,]
str(grpdcsn)
blacklist
grpbid$touched <- factor(as.numeric(grpbid$Group == grpbid$patch), level = c(1,0))
grpbid$Group <- as.factor(grpbid$Group)
grpbid$subID <- as.factor(grpbid$subID)
grpbid$trial <- as.factor(grpbid$trial)
grpbid$item <- as.factor(grpbid$item)
# check again after change
str(grpbid)
bid1 <- grpbid[grpbid$bid_times == 1,]
bid2 <- grpbid[grpbid$bid_times == 2,]
bid3 <- grpbid[grpbid$bid_times == 3,]
long <- merge(bid1, bid2, by = c('subID','item'))
long <- merge(long, bid3, by = c('subID','item'))
par(mfrow = c(2,2))
plot(long$bid.x, long$bid.y, pch = 20, cex = .3, xlab = 'bid 1', ylab = 'bid 2')
plot(long$bid, long$bid.y, pch = 20, cex = .3, xlab = 'bid 3', ylab = 'bid 2')
plot(long$bid.x, long$bid, pch = 20, cex = .3, xlab = 'bid 1', ylab = 'bid 3')
dev.copy(pdf,file.path(out_dir,'Bid123.pdf'),height=8, width=8)
dev.off()
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
grpbid
meanbid <- aggregate(bid ~ item + touched +  subID, FUN = mean, data = grpbid)
sdbid <- aggregate(bid ~ item + touched + subID, FUN = sd, data = grpbid)
varbid <- aggregate(bid ~ item + touched + subID, FUN = var, data = grpbid)
varbid
rm(varbid)
rm('varbid')
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII')
data_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/TaskProgram/log/txtDat'
out_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII'
data_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/TaskProgram/log/txtDat'
out_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII'
data_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/CESS-Bo/TaskProgram/log/txtDat'
out_dir <- '/Users/bs3667/Dropbox (NYU Langone Health)/Bo Shen Working files/NoiseProject/AnalysisII'
